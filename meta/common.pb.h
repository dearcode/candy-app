// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common.proto

#ifndef PROTOBUF_common_2eproto__INCLUDED
#define PROTOBUF_common_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace candy {
namespace meta {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_common_2eproto();
void protobuf_AssignDesc_common_2eproto();
void protobuf_ShutdownFile_common_2eproto();

class Group;
class Message;
class PushID;
class RequestHeader;
class ResponseHeader;

enum FriendRelation {
  None = 0,
  Active = 1,
  Passive = 2,
  Confirm = 3,
  FriendRelation_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  FriendRelation_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool FriendRelation_IsValid(int value);
const FriendRelation FriendRelation_MIN = None;
const FriendRelation FriendRelation_MAX = Confirm;
const int FriendRelation_ARRAYSIZE = FriendRelation_MAX + 1;

const ::google::protobuf::EnumDescriptor* FriendRelation_descriptor();
inline const ::std::string& FriendRelation_Name(FriendRelation value) {
  return ::google::protobuf::internal::NameOfEnum(
    FriendRelation_descriptor(), value);
}
inline bool FriendRelation_Parse(
    const ::std::string& name, FriendRelation* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FriendRelation>(
    FriendRelation_descriptor(), name, value);
}
enum Method {
  NONE = 0,
  FRIEND_ADD = 1,
  FRIEND_CONFIRM = 2,
  FRIEND_DEL = 3,
  GROUP_ADD = 4,
  GROUP_EXIT = 5,
  GROUP_INVITE = 6,
  Method_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Method_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Method_IsValid(int value);
const Method Method_MIN = NONE;
const Method Method_MAX = GROUP_INVITE;
const int Method_ARRAYSIZE = Method_MAX + 1;

const ::google::protobuf::EnumDescriptor* Method_descriptor();
inline const ::std::string& Method_Name(Method value) {
  return ::google::protobuf::internal::NameOfEnum(
    Method_descriptor(), value);
}
inline bool Method_Parse(
    const ::std::string& name, Method* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Method>(
    Method_descriptor(), name, value);
}
// ===================================================================

class RequestHeader : public ::google::protobuf::Message {
 public:
  RequestHeader();
  virtual ~RequestHeader();

  RequestHeader(const RequestHeader& from);

  inline RequestHeader& operator=(const RequestHeader& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestHeader& default_instance();

  void Swap(RequestHeader* other);

  // implements Message ----------------------------------------------

  inline RequestHeader* New() const { return New(NULL); }

  RequestHeader* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestHeader& from);
  void MergeFrom(const RequestHeader& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RequestHeader* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 User = 1;
  void clear_user();
  static const int kUserFieldNumber = 1;
  ::google::protobuf::int64 user() const;
  void set_user(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:candy.meta.RequestHeader)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int64 user_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static RequestHeader* default_instance_;
};
// -------------------------------------------------------------------

class ResponseHeader : public ::google::protobuf::Message {
 public:
  ResponseHeader();
  virtual ~ResponseHeader();

  ResponseHeader(const ResponseHeader& from);

  inline ResponseHeader& operator=(const ResponseHeader& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ResponseHeader& default_instance();

  void Swap(ResponseHeader* other);

  // implements Message ----------------------------------------------

  inline ResponseHeader* New() const { return New(NULL); }

  ResponseHeader* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResponseHeader& from);
  void MergeFrom(const ResponseHeader& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ResponseHeader* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Code = 1;
  void clear_code();
  static const int kCodeFieldNumber = 1;
  ::google::protobuf::int32 code() const;
  void set_code(::google::protobuf::int32 value);

  // optional string Msg = 2;
  void clear_msg();
  static const int kMsgFieldNumber = 2;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // @@protoc_insertion_point(class_scope:candy.meta.ResponseHeader)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  ::google::protobuf::int32 code_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static ResponseHeader* default_instance_;
};
// -------------------------------------------------------------------

class PushID : public ::google::protobuf::Message {
 public:
  PushID();
  virtual ~PushID();

  PushID(const PushID& from);

  inline PushID& operator=(const PushID& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PushID& default_instance();

  void Swap(PushID* other);

  // implements Message ----------------------------------------------

  inline PushID* New() const { return New(NULL); }

  PushID* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PushID& from);
  void MergeFrom(const PushID& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PushID* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 User = 1;
  void clear_user();
  static const int kUserFieldNumber = 1;
  ::google::protobuf::int64 user() const;
  void set_user(::google::protobuf::int64 value);

  // optional int64 Before = 2;
  void clear_before();
  static const int kBeforeFieldNumber = 2;
  ::google::protobuf::int64 before() const;
  void set_before(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:candy.meta.PushID)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int64 user_;
  ::google::protobuf::int64 before_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static PushID* default_instance_;
};
// -------------------------------------------------------------------

class Message : public ::google::protobuf::Message {
 public:
  Message();
  virtual ~Message();

  Message(const Message& from);

  inline Message& operator=(const Message& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Message& default_instance();

  void Swap(Message* other);

  // implements Message ----------------------------------------------

  inline Message* New() const { return New(NULL); }

  Message* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Message& from);
  void MergeFrom(const Message& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Message* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 ID = 1;
  void clear_id();
  static const int kIDFieldNumber = 1;
  ::google::protobuf::int64 id() const;
  void set_id(::google::protobuf::int64 value);

  // optional int64 Before = 2;
  void clear_before();
  static const int kBeforeFieldNumber = 2;
  ::google::protobuf::int64 before() const;
  void set_before(::google::protobuf::int64 value);

  // optional .candy.meta.Method Method = 3;
  void clear_method();
  static const int kMethodFieldNumber = 3;
  ::candy::meta::Method method() const;
  void set_method(::candy::meta::Method value);

  // optional int64 From = 4;
  void clear_from();
  static const int kFromFieldNumber = 4;
  ::google::protobuf::int64 from() const;
  void set_from(::google::protobuf::int64 value);

  // optional int64 Group = 5;
  void clear_group();
  static const int kGroupFieldNumber = 5;
  ::google::protobuf::int64 group() const;
  void set_group(::google::protobuf::int64 value);

  // optional int64 User = 6;
  void clear_user();
  static const int kUserFieldNumber = 6;
  ::google::protobuf::int64 user() const;
  void set_user(::google::protobuf::int64 value);

  // optional string Body = 7;
  void clear_body();
  static const int kBodyFieldNumber = 7;
  const ::std::string& body() const;
  void set_body(const ::std::string& value);
  void set_body(const char* value);
  void set_body(const char* value, size_t size);
  ::std::string* mutable_body();
  ::std::string* release_body();
  void set_allocated_body(::std::string* body);

  // @@protoc_insertion_point(class_scope:candy.meta.Message)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int64 id_;
  ::google::protobuf::int64 before_;
  ::google::protobuf::int64 from_;
  ::google::protobuf::int64 group_;
  ::google::protobuf::int64 user_;
  ::google::protobuf::internal::ArenaStringPtr body_;
  int method_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static Message* default_instance_;
};
// -------------------------------------------------------------------

class Group : public ::google::protobuf::Message {
 public:
  Group();
  virtual ~Group();

  Group(const Group& from);

  inline Group& operator=(const Group& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Group& default_instance();

  void Swap(Group* other);

  // implements Message ----------------------------------------------

  inline Group* New() const { return New(NULL); }

  Group* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Group& from);
  void MergeFrom(const Group& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Group* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 ID = 1;
  void clear_id();
  static const int kIDFieldNumber = 1;
  ::google::protobuf::int64 id() const;
  void set_id(::google::protobuf::int64 value);

  // optional string Name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // repeated int64 Users = 3;
  int users_size() const;
  void clear_users();
  static const int kUsersFieldNumber = 3;
  ::google::protobuf::int64 users(int index) const;
  void set_users(int index, ::google::protobuf::int64 value);
  void add_users(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      users() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_users();

  // @@protoc_insertion_point(class_scope:candy.meta.Group)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int64 id_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > users_;
  mutable int _users_cached_byte_size_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static Group* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// RequestHeader

// optional int64 User = 1;
inline void RequestHeader::clear_user() {
  user_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 RequestHeader::user() const {
  // @@protoc_insertion_point(field_get:candy.meta.RequestHeader.User)
  return user_;
}
inline void RequestHeader::set_user(::google::protobuf::int64 value) {
  
  user_ = value;
  // @@protoc_insertion_point(field_set:candy.meta.RequestHeader.User)
}

// -------------------------------------------------------------------

// ResponseHeader

// optional int32 Code = 1;
inline void ResponseHeader::clear_code() {
  code_ = 0;
}
inline ::google::protobuf::int32 ResponseHeader::code() const {
  // @@protoc_insertion_point(field_get:candy.meta.ResponseHeader.Code)
  return code_;
}
inline void ResponseHeader::set_code(::google::protobuf::int32 value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:candy.meta.ResponseHeader.Code)
}

// optional string Msg = 2;
inline void ResponseHeader::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ResponseHeader::msg() const {
  // @@protoc_insertion_point(field_get:candy.meta.ResponseHeader.Msg)
  return msg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ResponseHeader::set_msg(const ::std::string& value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:candy.meta.ResponseHeader.Msg)
}
inline void ResponseHeader::set_msg(const char* value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:candy.meta.ResponseHeader.Msg)
}
inline void ResponseHeader::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:candy.meta.ResponseHeader.Msg)
}
inline ::std::string* ResponseHeader::mutable_msg() {
  
  // @@protoc_insertion_point(field_mutable:candy.meta.ResponseHeader.Msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ResponseHeader::release_msg() {
  
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ResponseHeader::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:candy.meta.ResponseHeader.Msg)
}

// -------------------------------------------------------------------

// PushID

// optional int64 User = 1;
inline void PushID::clear_user() {
  user_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 PushID::user() const {
  // @@protoc_insertion_point(field_get:candy.meta.PushID.User)
  return user_;
}
inline void PushID::set_user(::google::protobuf::int64 value) {
  
  user_ = value;
  // @@protoc_insertion_point(field_set:candy.meta.PushID.User)
}

// optional int64 Before = 2;
inline void PushID::clear_before() {
  before_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 PushID::before() const {
  // @@protoc_insertion_point(field_get:candy.meta.PushID.Before)
  return before_;
}
inline void PushID::set_before(::google::protobuf::int64 value) {
  
  before_ = value;
  // @@protoc_insertion_point(field_set:candy.meta.PushID.Before)
}

// -------------------------------------------------------------------

// Message

// optional int64 ID = 1;
inline void Message::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Message::id() const {
  // @@protoc_insertion_point(field_get:candy.meta.Message.ID)
  return id_;
}
inline void Message::set_id(::google::protobuf::int64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:candy.meta.Message.ID)
}

// optional int64 Before = 2;
inline void Message::clear_before() {
  before_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Message::before() const {
  // @@protoc_insertion_point(field_get:candy.meta.Message.Before)
  return before_;
}
inline void Message::set_before(::google::protobuf::int64 value) {
  
  before_ = value;
  // @@protoc_insertion_point(field_set:candy.meta.Message.Before)
}

// optional .candy.meta.Method Method = 3;
inline void Message::clear_method() {
  method_ = 0;
}
inline ::candy::meta::Method Message::method() const {
  // @@protoc_insertion_point(field_get:candy.meta.Message.Method)
  return static_cast< ::candy::meta::Method >(method_);
}
inline void Message::set_method(::candy::meta::Method value) {
  
  method_ = value;
  // @@protoc_insertion_point(field_set:candy.meta.Message.Method)
}

// optional int64 From = 4;
inline void Message::clear_from() {
  from_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Message::from() const {
  // @@protoc_insertion_point(field_get:candy.meta.Message.From)
  return from_;
}
inline void Message::set_from(::google::protobuf::int64 value) {
  
  from_ = value;
  // @@protoc_insertion_point(field_set:candy.meta.Message.From)
}

// optional int64 Group = 5;
inline void Message::clear_group() {
  group_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Message::group() const {
  // @@protoc_insertion_point(field_get:candy.meta.Message.Group)
  return group_;
}
inline void Message::set_group(::google::protobuf::int64 value) {
  
  group_ = value;
  // @@protoc_insertion_point(field_set:candy.meta.Message.Group)
}

// optional int64 User = 6;
inline void Message::clear_user() {
  user_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Message::user() const {
  // @@protoc_insertion_point(field_get:candy.meta.Message.User)
  return user_;
}
inline void Message::set_user(::google::protobuf::int64 value) {
  
  user_ = value;
  // @@protoc_insertion_point(field_set:candy.meta.Message.User)
}

// optional string Body = 7;
inline void Message::clear_body() {
  body_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Message::body() const {
  // @@protoc_insertion_point(field_get:candy.meta.Message.Body)
  return body_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Message::set_body(const ::std::string& value) {
  
  body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:candy.meta.Message.Body)
}
inline void Message::set_body(const char* value) {
  
  body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:candy.meta.Message.Body)
}
inline void Message::set_body(const char* value, size_t size) {
  
  body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:candy.meta.Message.Body)
}
inline ::std::string* Message::mutable_body() {
  
  // @@protoc_insertion_point(field_mutable:candy.meta.Message.Body)
  return body_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Message::release_body() {
  
  return body_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Message::set_allocated_body(::std::string* body) {
  if (body != NULL) {
    
  } else {
    
  }
  body_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), body);
  // @@protoc_insertion_point(field_set_allocated:candy.meta.Message.Body)
}

// -------------------------------------------------------------------

// Group

// optional int64 ID = 1;
inline void Group::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Group::id() const {
  // @@protoc_insertion_point(field_get:candy.meta.Group.ID)
  return id_;
}
inline void Group::set_id(::google::protobuf::int64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:candy.meta.Group.ID)
}

// optional string Name = 2;
inline void Group::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Group::name() const {
  // @@protoc_insertion_point(field_get:candy.meta.Group.Name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Group::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:candy.meta.Group.Name)
}
inline void Group::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:candy.meta.Group.Name)
}
inline void Group::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:candy.meta.Group.Name)
}
inline ::std::string* Group::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:candy.meta.Group.Name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Group::release_name() {
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Group::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:candy.meta.Group.Name)
}

// repeated int64 Users = 3;
inline int Group::users_size() const {
  return users_.size();
}
inline void Group::clear_users() {
  users_.Clear();
}
inline ::google::protobuf::int64 Group::users(int index) const {
  // @@protoc_insertion_point(field_get:candy.meta.Group.Users)
  return users_.Get(index);
}
inline void Group::set_users(int index, ::google::protobuf::int64 value) {
  users_.Set(index, value);
  // @@protoc_insertion_point(field_set:candy.meta.Group.Users)
}
inline void Group::add_users(::google::protobuf::int64 value) {
  users_.Add(value);
  // @@protoc_insertion_point(field_add:candy.meta.Group.Users)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
Group::users() const {
  // @@protoc_insertion_point(field_list:candy.meta.Group.Users)
  return users_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
Group::mutable_users() {
  // @@protoc_insertion_point(field_mutable_list:candy.meta.Group.Users)
  return &users_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace meta
}  // namespace candy

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::candy::meta::FriendRelation> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::candy::meta::FriendRelation>() {
  return ::candy::meta::FriendRelation_descriptor();
}
template <> struct is_proto_enum< ::candy::meta::Method> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::candy::meta::Method>() {
  return ::candy::meta::Method_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_common_2eproto__INCLUDED
